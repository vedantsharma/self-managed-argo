apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
  namespace: vault
spec:
  size: 1
  image: hashicorp/vault:1.15.4

  serviceAccount: vault
  serviceType: ClusterIP
  servicePorts:
    api-port: 8200
    cluster-port: 8201
    ext-api-port: 8300
    ext-clu-port: 8301

  # Common annotations for all created resources
  annotations:
    common/annotation: "true"
  # Vault Pods , Services and TLS Secret annotations
  vaultAnnotations:
    type/instance: "vault"
  # Vault Configurer Pods and Services annotations
  vaultConfigurerAnnotations:
    type/instance: "vaultconfigurer"
  # Vault Pods , Services and TLS Secret labels
  vaultLabels:
    example.com/log-format: "json"
  # Vault Configurer Pods and Services labels
  vaultConfigurerLabels:
    example.com/log-format: "string"

  # autoInitialize: true

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    google:
      kmsProject: "go-plauground"
      kmsLocation: "us-east1"
      kmsKeyRing: "cicd-keyring"
      kmsCryptoKey: "vault-key"
      storageBucket: "my-vault-playground"
    options:
      preFlightChecks: true

  config:
    ui: true
    api_addr: https://vault:8200
    cluster_addr: https://vault:8201
    disable_mlock: true
    storage:
      gcs:
        bucket: "my-vault-playground"
        ha_enabled: "true"
    seal:
      gcpckms:
        project: "go-playground"
        region: "us-east1"
        key_ring: "cicd-keyring"
        crypto_key: "vault-key"
    listener:
      - tcp:
          address: "0.0.0.0:8200"
          tls_cert_file: /vault/tls/server.crt
          tls_key_file: /vault/tls/server.key
      # TODO: ideally, we want web-tls connection to be passed through directly to vault
      # TODO: even if not implemented, we should probably secure connection between kong and vault
      - tcp:
          address: "0.0.0.0:8300"
          tls_disable: true
    telemetry:
      statsd_address: localhost:9125

  ingress: {}
    # annotations:
    #   kubernetes.io/tls-acme: "true"
    #   kubernetes.io/ingress.class: "kong"
    #   cert-manager.io/cluster-issuer: "cluster-issuer-zerossl"
    #   ingress.kubernetes.io/force-ssl-redirect: "true"
    #   konghq.com/protocols: "https"
    #   external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    #   external-dns.alpha.kubernetes.io/ttl: "120"
    # spec:
    #   ingressClassName: "kong"
    #   rules:
    #     - host: vault.haatcloud.com
    #       http:
    #         paths:
    #         - pathType: Prefix
    #           path: /
    #           backend:
    #             service:
    #               name: vault
    #               port:
    #                 number: 8300
    #   tls: {}
    #   - secretName: vault-ingress-tls
    #     hosts:
    #     - vault.haatcloud.com

  resources: {}
    # bankVaults:
    #   requests:
    #     cpu: 100m
    #     memory: 256Mi
    #   limits:
    #     cpu: 500m
    #     memory: 512Mi
    # vault:
    #   requests:
    #     cpu: 200m
    #     memory: 256Mi
    #   limits:
    #     cpu: 1000m
    #     memory: 1Gi


  ##############################################################################
  ##############################################################################
  ##############################################################################

#   caNamespaces: {}
    # - "cert-issuers"
    # - "external-dns"
    # - "gitlab-runner"
    # - "operators"

  externalConfig:
    # Delete any configuration that in Vault but not in externalConfig
    # TODO(ahmadki): doesn't work ?
    purgeUnmanagedConfig:
      enabled: true

    policies:
      ############################# Admin Polices #############################
      - name: admin
        rules:
          path "sys/health" {
            capabilities = ["read", "sudo"]
          }
          path "sys/policies/acl" {
            capabilities = ["list"]
          }
          path "sys/policies/acl/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          path "sys/auth/*" {
            capabilities = ["create", "update", "delete", "sudo"]
          }
          path "sys/auth" {
            capabilities = ["read"]
          }
          path "sys/mounts/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          path "sys/mounts" {
            capabilities = ["read"]
          }
          path "auth/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          path "general/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          path "cicd/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          path "suhail/*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
      #########################################################################

      ############################# CI/CD Polices #############################
      # External DNS
      - name: cicd-cloudflare
        rules:
          path "cicd/data/external-services/cloudflare" {
            capabilities = ["read"]
          }
      # ZeroSSL
      - name: cicd-zerossl
        rules:
          path "cicd/data/external-services/zerossl" {
            capabilities = ["read"]
          }
      # Gitlab Runner
      - name: cicd-gitlab-runner
        rules:
          path "cicd/data/external-services/gitlab" {
            capabilities = ["read"]
          }
      #########################################################################

      ####################### Suhail Development Polices ######################
      # Cloudflare
      - name: suhail-dev-cloudflare
        rules:
          path "suhail/data/dev/external-services/cloudflare" {
            capabilities = ["read"]
          }
      # ZeroSSL
      - name: suhail-dev-zerossl
        rules:
          path "suhail/data/dev/external-services/zerossl" {
            capabilities = ["read"]
          }
      # Kafka
      - name: suhail-dev-kafka-connect-mqtt
        rules:
          path "suhail/data/dev/kafka/connect/mqtt" {
            capabilities = ["read"]
          }
      - name: suhail-dev-kafka-connect-s3
        rules:
          path "suhail/data/dev/kafka/connect/s3" {
            capabilities = ["read"]
          }
      # Django
      - name: suhail-dev-django-django
        rules:
          path "suhail/data/dev/django/django" {
            capabilities = ["read"]
          }
      - name: suhail-dev-django-celery-flower
        rules:
          path "suhail/data/dev/django/celery_flower" {
            capabilities = ["read"]
          }
      - name: suhail-dev-django-sentry
        rules:
          path "suhail/data/dev/django/sentry" {
            capabilities = ["read"]
          }
      - name: suhail-dev-django-emqx
        rules:
          path "suhail/data/dev/django/emqx" {
            capabilities = ["read"]
          }
      # OSRM
      - name: suhail-dev-osrm-basicauth
        rules:
          path "suhail/data/dev/osrm/basicauth" {
            capabilities = ["read"]
          }
      # VRP
      - name: suhail-dev-vrp-basicauth
        rules:
          path "suhail/data/dev/vrp/basicauth" {
            capabilities = ["read"]
          }
      #######################
      # Image pull secrets
      #######################
      # TODO(ahmadki): unify paths (use same for dev and prod)
      # Kafka connect
      - name: suhail-dev-kafka-connect-gitlab-docker-registry
        rules:
          path "suhail/data/dev/kafka/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Streams
      - name: suhail-dev-streams-gitlab-docker-registry
        rules:
          path "suhail/data/dev/streams/gitlab-ro" {
            capabilities = ["read"]
          }
      # Tile38-Client
      - name: suhail-dev-tile38client-gitlab-docker-registry
        rules:
          path "suhail/data/dev/tile39client/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Suhail Operator
      - name: suhail-dev-suhail-operator-gitlab-docker-registry
        rules:
          path "suhail/data/dev/catalog/gitlab-ro" {
            capabilities = ["read"]
          }
      # VRP
      - name: suhail-dev-vrp-gitlab-docker-registry
        rules:
          path "suhail/data/dev/vrp/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # OSRM
      - name: suhail-dev-osrm-gitlab-docker-registry
        rules:
          path "suhail/data/dev/osrm/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Django
      - name: suhail-dev-django-gitlab-docker-registry
        rules:
          path "suhail/data/dev/django/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      #########################################################################

      ####################### Suhail Production Polices #######################
      # Cloudflare
      - name: suhail-prod-cloudflare
        rules:
          path "suhail/data/prod/external-services/cloudflare" {
            capabilities = ["read"]
          }
      # ZeroSSL
      - name: suhail-prod-zerossl
        rules:
          path "suhail/data/prod/external-services/zerossl" {
            capabilities = ["read"]
          }
      # Kafka
      - name: suhail-prod-kafka-connect-mqtt
        rules:
          path "suhail/data/prod/kafka/connect/mqtt" {
            capabilities = ["read"]
          }
      - name: suhail-prod-kafka-connect-s3
        rules:
          path "suhail/data/prod/kafka/connect/s3" {
            capabilities = ["read"]
          }
      # Django
      - name: suhail-prod-django-django
        rules:
          path "suhail/data/prod/django/django" {
            capabilities = ["read"]
          }
      - name: suhail-prod-django-celery-flower
        rules:
          path "suhail/data/prod/django/celery_flower" {
            capabilities = ["read"]
          }
      - name: suhail-prod-django-sentry
        rules:
          path "suhail/data/prod/django/sentry" {
            capabilities = ["read"]
          }
      - name: suhail-prod-django-emqx
        rules:
          path "suhail/data/prod/django/emqx" {
            capabilities = ["read"]
          }
      # OSRM
      - name: suhail-prod-osrm-basicauth
        rules:
          path "suhail/data/prod/osrm/basicauth" {
            capabilities = ["read"]
          }
      # VRP
      - name: suhail-prod-vrp-basicauth
        rules:
          path "suhail/data/prod/vrp/basicauth" {
            capabilities = ["read"]
          }
      #######################
      # Image pull secrets
      #######################
      # TODO(ahmadki): unify paths (use same for dev and prod)
      # Kafka connect
      - name: suhail-prod-kafka-connect-gitlab-docker-registry
        rules:
          path "suhail/data/prod/kafka/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Streams
      - name: suhail-prod-streams-gitlab-docker-registry
        rules:
          path "suhail/data/prod/streams/gitlab-ro" {
            capabilities = ["read"]
          }
      # Tile38-Client
      - name: suhail-prod-tile38client-gitlab-docker-registry
        rules:
          path "suhail/data/prod/tile39client/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Suhail Operator
      - name: suhail-prod-suhail-operator-gitlab-docker-registry
        rules:
          path "suhail/data/prod/catalog/gitlab-ro" {
            capabilities = ["read"]
          }
      # VRP
      - name: suhail-prod-vrp-gitlab-docker-registry
        rules:
          path "suhail/data/prod/vrp/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # OSRM
      - name: suhail-prod-osrm-gitlab-docker-registry
        rules:
          path "suhail/data/prod/osrm/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      # Django
      - name: suhail-prod-django-gitlab-docker-registry
        rules:
          path "suhail/data/prod/django/dockerregistry/gitlab-ro" {
            capabilities = ["read"]
          }
      #########################################################################

    # To add a new cluster:
    # 1) get kubernetes_host and kubernetes_ca_cert.
    #    From kube config, either read the config file or under the context of
    #    the external cluster run the command:
    #    `kubectl config view -o yaml --minify=true --raw=true`
    #        kubernetes_host: cluster.server
    #        kubernetes_ca_cert: echo -n 'cluster.certificate-authority-data' | base64 -d
    # 2) create vault service account in dest target (this is the mutating webhook vault):
    #     kubectl create namespace vault
    #     kubectl create -f apps/vault/templates/rbac.yaml
    # 3) retrieve token_reviewer_jwt from the service account:
    #    `kubectl get -n vault secret vault-serviceaccount-token -o jsonpath='{.data.token}' | base64 --decode`
    auth:

      - path: go-cluster-1
        type: kubernetes
        config:
          kubernetes_ca_cert: |
            -----BEGIN CERTIFICATE-----
            MIIELDCCApSgAwIBAgIQARh07dZnn4drSFXD3mY8yzANBgkqhkiG9w0BAQsFADAv
            MS0wKwYDVQQDEyRkMmRmMGRmMS05ZDU5LTRmYzYtODhhZi04NjJkNGQ5ZDQzY2Iw
            IBcNMjMwOTI0MDEzNzA2WhgPMjA1MzA5MTYwMjM3MDZaMC8xLTArBgNVBAMTJGQy
            ZGYwZGYxLTlkNTktNGZjNi04OGFmLTg2MmQ0ZDlkNDNjYjCCAaIwDQYJKoZIhvcN
            AQEBBQADggGPADCCAYoCggGBAJjxrW0tLCxxxepoU4J//tk9rogrjaLRzt7VCr+Y
            uIprYgwA4CifRhmE0T7qN6y/Z7ptUJiVP5zjKTQgIqb2YTV35O7G/K4fUN/ra3yl
            GM57o7KuqFGkF6KtBImQSBjji7h0+oiV769ZCaxfybgFcPb2TVSBtDdnev9n01V5
            S8UXzVKrfhwKH9UNgG29U+7pnTxRpy2B0OGskA6k0ck7HKvkLXNCPn1OWbL5pr9b
            i98krergi4NJ/62zkeFSH5lNCFBdJDImllxj3v7XKA/Sx3tfsK0o79uw4WLx0T2U
            TArwVZbrNUKvVQFltKo4cN0138yKppyD9GVUVr8Xkl6tQamyPcZSM2E9HMKa5ngi
            fMLAVSMk9tIDKEjcT2u480XbzMg/qC83EU81RQ+IAY6hQqoZxgyM+SKIlO+4rhp2
            0QHfwjsA+QF+Lr9FWiFki2JmFWSP21ja4t+AUbi4FKYwFR/5JqnWVcYLozIDN5TQ
            yaIj/dD9aetjRAaDm25Q86YLtQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAgQwDwYD
            VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUetHAoTKAR4JAUwge2nj+kSR9vZowDQYJ
            KoZIhvcNAQELBQADggGBAJY/4+tdxxIoNpL2vtXjA+LVC5ALNkeAZ0SIYVEf/cKt
            +d8/WZK+JsyjY9eXYhDAGuhlqfz9xvwID+HzBLOwUOT3mqgAMSzFzSjRfsCLkAD3
            tWGd0Db16Rbru50AoHJpPCamDAtyimBn9TRaFU0oBw4r3sOzcV22r5kyZDFIGUze
            PhBg0e08xNgkTfKppZX0W0u+EAkRKAMKm0s7r2WtZiem9XvQv8hfnUx9/h/WCi2F
            Y1dZFowovvveezTGlpo10jQYgj5gX/VK+osSX8iGSrijtOy7Tk+Q+5nSYvNOsxLQ
            nsjxmOCet0x8MsIiBPX+ou3BZIYoMNkozA7pYeoPqvOMyUDuy6nasSLm1TOjgpVN
            3qYkerAF4TTUPelpCHDLsUMRwgXLiKBnNM364NqXSDMImJ2Ak42T8eXqfY8Hc+lf
            KZ9RTCLcjOyamPzTocvKTH+kjA+bZ93s+VoNONgL/cBsuL0tDuPfJQetwjmoGk9Q
            bFenC/ei16lCen8JVgZ9pA==
            -----END CERTIFICATE-----
          kubernetes_host: https://kubernetes.default.svc
          token_reviewer_jwt: eyJhbGciOiJSUzI1NiIsImtpZCI6IjJwak9aRDJBdHRielI5T2tvcksybi0yeHNJcGcyVkVKSHVHWXRyQUtyeWMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ2YXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ2YXVsdC1zZXJ2aWNlYWNjb3VudC10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ2YXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImRlMTY0ZGQ3LTUyMzUtNGNhZC05NGQ2LWVhYTM5M2Q1MWEyYiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp2YXVsdDp2YXVsdCJ9.BfT-7pGvwc4Pn66HunN4CYZrNAi3qKZz9Re_N2bb8YUKL3JZ860n1gy9Mm0VAdojZteWiYYGW8IKe_pc5_cr87qDHzEmffizYQrW2GYQ_g3O5qNiPtuUnrdVRtLXxDBrs6akPHdlQzqsWSi5qJ7QQiqmxnfG9_CJvX9V0P_cT4VjsW65cQDRhrklXkm9FgBPKJes-g4eAcmkNyMKGfNBYrnftpmj4zFAj6kf9ALtThPxyk37g0-XlEq-R5pCIRrKHR6na04li3K5iqy4CSkkpY5-wDp9n6fDTd_Q56qMycRk6j_QCiTQP7qtieHqtIecxbT8RlgFRo3KV_Wj9stCNQ
        roles: {}
        #   # Operators
        #   - name: suhail-prod-operators-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-suhail-operator-gitlab-docker-registry
        #     ttl: 1h
        #   # OLM
        #   - name: suhail-prod-olm-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-suhail-operator-gitlab-docker-registry
        #     ttl: 1h
        #   # VRP
        #   - name: suhail-prod-vrp-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-vrp-gitlab-docker-registry
        #     ttl: 1h
        #   # Streams
        #   - name: suhail-prod-streams-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-streams-gitlab-docker-registry
        #     ttl: 1h
        #   # Geofencing
        #   - name: suhail-prod-geofencing-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-tile38client-gitlab-docker-registry
        #     ttl: 1h
        #   # OSRM
        #   - name: suhail-prod-osrm-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-osrm-gitlab-docker-registry
        #     ttl: 1h
        #   - name: suhail-prod-osrm-endpoint-basicauth
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-osrm-basicauth
        #     ttl: 1h
        #   # ExternalDNS
        #   - name: suhail-prod-external-dns
        #     bound_service_account_names: suhail-external-dns
        #     bound_service_account_namespaces: external-dns
        #     policies:
        #       - suhail-prod-cloudflare
        #     ttl: 1h
        #   # Cert Issuers
        #   ## The cert issuers secret is created in the operators namesapce
        #   - name: suhail-prod-cert-issuers
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-cloudflare
        #       - suhail-prod-zerossl
        #     ttl: 1h
        #   # Kafka
        #   - name: suhail-prod-kafka-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-kafka-connect-gitlab-docker-registry
        #     ttl: 1h
        #   - name: suhail-prod-connect-cluster
        #     bound_service_account_names: suhail-connect-cluster-connect
        #     bound_service_account_namespaces: kafka
        #     policies:
        #       - suhail-prod-kafka-connect-mqtt
        #       - suhail-prod-kafka-connect-s3
        #     ttl: 1h
        #   # Django
        #   - name: suhail-prod-django-imagepullsecrets
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-django-gitlab-docker-registry
        #     ttl: 1h
        #   - name: suhail-prod-django
        #     bound_service_account_names: suhail-django
        #     bound_service_account_namespaces: django
        #     policies:
        #       - suhail-prod-django-django
        #       - suhail-prod-django-celery-flower
        #       - suhail-prod-django-sentry
        #       - suhail-prod-django-emqx
        #     ttl: 1h
        #   #VRP
        #   - name: suhail-prod-vrp-endpoint-basicauth
        #     bound_service_account_names: suhail-vault-vault-secrets-webhook
        #     bound_service_account_namespaces: vault
        #     policies:
        #       - suhail-prod-vrp-basicauth
        #     ttl: 1h

    secrets:
      - path: general
        type: kv
        description: General secrets.
        options:
          version: 2
      - path: test
        type: kv
        description: test cluster secrets.
        options:
          version: 2
    #   - path: suhail
    #     type: kv
    #     description: Suhail secrets.
    #     options:
    #       version: 2


# TODO: metrics
# TODO: audit and logs
