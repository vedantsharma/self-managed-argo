kong:
  replicaCount: 1

  serviceMonitor:
    enabled: true
    namespace: kong

  resources: {}
    # requests:
    #   cpu: 250m
    #   memory: 256Mi
    # limits:
    #   cpu: 400m
    #   memory: 512Mi

  # Specify Kong proxy service configuration
  proxy:
    # Enable creating a Kubernetes service for the proxy
    enabled: false
    type: LoadBalancer

    # To specify annotations or labels for the proxy service, add them to the respective
    # "annotations" or "labels" dictionaries below.
    annotations:
      # service.beta.kubernetes.io/do-loadbalancer-name: "CICD-cluster"
      # service.beta.kubernetes.io/do-loadbalancer-size-slug: "lb-small"
      # service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
      # service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
      # service.beta.kubernetes.io/do-loadbalancer-algorithm: "round_robin"
      # service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"
      # service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: "true"
      # service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"

    labels:
      enable-metrics: "false"

    http:
      # Enable plaintext HTTP listen for the proxy
      enabled: true
      servicePort: 80
      containerPort: 8000
      # Set a nodePort which is available if service type is NodePort
      # nodePort: 32080
      # Additional listen parameters, e.g. "reuseport", "backlog=16384"
      parameters: []

    tls:
      # Enable HTTPS listen for the proxy
      enabled: false
      servicePort: 443
      containerPort: 8443
      parameters:
      - http2

    # Define stream (TCP) listen
    # To enable, remove "{}", uncomment the section below, and select your desired
    # ports and parameters. Listens are dynamically named after their servicePort,
    # e.g. "stream-9000" for the below.
    # Note: although you can select the protocol here, you cannot set UDP if you
    # use a LoadBalancer Service due to limitations in current Kubernetes versions.
    # To proxy both TCP and UDP with LoadBalancers, you must enable the udpProxy Service
    # in the next section and place all UDP stream listen configuration under it.
    stream: {}

    # Kong proxy ingress settings.
    # Note: You need this only if you are using another Ingress Controller
    # to expose Kong outside the k8s cluster.
    ingress:
      # Enable/disable exposure using ingress.
      enabled: false

  # Kong Ingress Controller's primary purpose is to satisfy Ingress resources
  # created in k8s.  It uses CRDs for more fine grained control over routing and
  # for Kong specific configuration.
  ingressController:
    enabled: false
    installCRDs: false

    ingressClass: kong

    # annotations for IngressClass resource (Kubernetes 1.18+)
    ingressClassAnnotations:
      # ingressclass.kubernetes.io/is-default-class: true

    rbac:
      # Specifies whether RBAC resources should be created
      create: false

    resources: {}
      # requests:
      #   cpu: 100m
      #   memory: 256Mi
      # limits:
      #   cpu: 250m
      #   memory: 512Mi

  manager:
    # Enable creating a Kubernetes service for Kong Manager
    enabled: false
